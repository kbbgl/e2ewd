plugins {
    id "java"
    id "application"
}

version = "7.0.2"


sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

jar {
    manifest {
        attributes (
                "Main-Class": "App",
                "Specification-Title": "e2ewd",
                "Specification-Version" : getVersion().toString(),
                "Specification-Vendor" : "Kobbi Gal",
                "Implementation-Title"   : "e2ewd",
                "Implementation-Version"  : getVersion().toString(),
                "Implementation-Vendor" : "Kobbi Gal"
        )
    }

    archiveName = "e2ewd.jar"

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    into 'resources', {
        from 'resources'
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.apache.httpcomponents:httpcore:4.4.1'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    compile group: 'org.json', name: 'json', version: '20090211'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'

    // https://mvnrepository.com/artifact/com.profesorfalken/jPowerShell
    compile group: 'com.profesorfalken', name: 'jPowerShell', version: '3.0.4'

    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.12.0'

}

task preBuild(){
    doLast {
        new File("$projectDir/build/libs/run/result.txt").text = ""
        new File("$projectDir/build/libs/log/log.txt").text = ""
        new File("$projectDir/build/libs/version").text = getVersion().toString()
        new File("$projectDir/build/libs/SiSense").deleteDir()
    }
}

task copyFilesToTestServer(){
    doLast {
        copy {
            from 'build/libs/e2ewd.jar'
            into 'C:/temp/'
        }
    }
}

// Define the main class for the application
mainClassName = 'App'

build.dependsOn preBuild